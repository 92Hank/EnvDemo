name: Write to json

on:
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

# env: 
#   REACT_APP_GIT_VERSION: ${{ secrets.REACT_APP_GIT_VERSION}}

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: env-demo

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: env-demo/package-lock.json


      - name: Git describe
        id: ghd
        uses: proudust/gh-describe@v1.5.4
      - name: Check outputs
        run: |
          echo "describe: ${{ steps.ghd.outputs.describe }}"
          echo "tag     : ${{ steps.ghd.outputs.tag }}"
          echo "distance: ${{ steps.ghd.outputs.distance }}"
          echo "sha     : ${{ steps.ghd.outputs.sha }}"

      - name: Set Git tag
        run: |
          echo "tag=${{ steps.ghd.outputs.tag }}" >> $GITHUB_ENV
          echo "build_date=$(date +'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
          echo "git_tag_date=$(git log -1 --format=%ai --date=short)" >> $GITHUB_ENV
      - name: Check output
        run: |
          touch ${{ github.workspace }}/env-demo/src/.env
          echo ${{env.tag}} - ${{env.build_date}} - ${{env.git_tag_date}}
          echo "REACT_APP_GIT_VERSION=${{env.tag}}" >> $GITHUB_ENV

      - name: Create .env file
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
          ENV_ANOTHER_KEY: ${{ secrets.ANOTHER_KEY }}
      
      - name: Run git script
        uses: actions/github-script@v6
        with:
          script: |
            const { default: printGitTag } = await import('${{ github.workspace }}/env-demo/src/gitTagInfo.js')
            const { default: printStuff } = await import('${{ github.workspace }}/env-demo/src/print-stuff.js')
            console.log('${{env.tag}}')
            await printGitTag('${{env.tag}}')
            await printStuff()
            console.log('stuff')

      - name: Install dependencies
        run: |
          npm ci
          npm run git-tag

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: env-demo-build
          path: env-demo/build/

      - name: Commit and push files
        id: commit
        run: |
          git config --local user.email "henrik.g.kristensson@gmail.com"
          git config --local user.name "Henke"
          git add --all
          if [-z "$(git status --porcelain)"]; then
            echo "::set-output name=push::false"
          else
            git commit -m "Add changes" -a
            git push
            echo "::set-output name=push::true"
          fi
        shell: bash
      # - name: Push changes
      #   if: steps.commit.outputs.push == 'true'
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_GITHUB_PAT }}
            
